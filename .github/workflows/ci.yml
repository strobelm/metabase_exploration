name: Basic CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r test-requirements.txt

      - name: Create test data directory
        run: |
          mkdir -p tests/data

      - name: Run tests
        run: |
          pytest --cov=app

  docker-stack:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Build ETL Docker image
        run: |
          docker build -f Dockerfile.etl -t customer-support-etl:latest .

      - name: Create required directories
        run: |
          mkdir -p init-scripts data

      - name: Bring up docker stack
        run: |
          docker compose up -d

      - name: Wait for containers to initialize
        run: |
          echo "Waiting for containers to start..."
          sleep 60

      - name: Check container status
        run: |
          echo "Checking container status..."
          docker ps -a

          if ! docker ps -q --filter "name=postgres" | grep -q .; then
            echo "Postgres container not running"
            docker logs postgres
            exit 1
          fi

          if ! docker ps -q --filter "name=metabase" | grep -q .; then
            echo "Metabase container not running"
            docker logs metabase
            exit 1
          fi

          ETL_STATUS=$(docker inspect --format='{{.State.ExitCode}}' etl)
          if [ "$ETL_STATUS" != "0" ]; then
            echo "ETL container failed with exit code $ETL_STATUS"
            docker logs etl
            exit 1
          fi

          echo "All containers are up and running!"

      - name: Bring down docker stack
        run: |
          docker compose down
        if: always()
