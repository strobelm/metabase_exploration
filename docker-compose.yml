services:
  metabase:
    image: metabase/metabase:latest
    container_name: metabase
    hostname: metabase
    volumes:
      - /dev/urandom:/dev/random:ro
    ports:
      - 3000:3000
    environment:
      MB_DB_TYPE: postgres
      MB_DB_DBNAME: metabase_app
      MB_DB_PORT: 5432
      MB_DB_USER: metabase
      MB_DB_PASS: mysecretpassword
      MB_DB_HOST: postgres
    networks:
      - metanet1
    depends_on:
      postgres:
        condition: service_healthy
      etl:
        condition: service_completed_successfully
    healthcheck:
      test: curl --fail -I http://localhost:3000/api/health || exit 1
      interval: 15s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  postgres:
    image: postgres:latest
    container_name: postgres
    hostname: postgres
    environment:
      POSTGRES_USER: metabase
      POSTGRES_PASSWORD: mysecretpassword
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    ports:
      - 5432:5432
    networks:
      - metanet1
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U metabase"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  etl:
    build:
      context: .
      dockerfile: Dockerfile.etl
    container_name: etl
    volumes:
      - ./data:/app/data
      - ./scripts:/app/scripts
    environment:
      DB_USER: metabase
      DB_PASSWORD: mysecretpassword
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: customer_support
      CSV_PATH: /app/data/customer_tickets.csv.gz
    networks:
      - metanet1
    depends_on:
      postgres:
        condition: service_healthy
    restart: on-failure

networks:
  metanet1:
    driver: bridge

volumes:
  postgres_data:
